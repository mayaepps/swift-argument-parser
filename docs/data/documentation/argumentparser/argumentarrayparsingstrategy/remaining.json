{"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"]]},"kind":"symbol","sections":[],"abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"type":"text","text":" "},{"text":"any inputs that have a dash prefix. This is the default strategy.","type":"text"}],"seeAlsoSections":[{"title":"Parsing Strategies","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining"]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remaining"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"remaining"},{"text":" is the default parsing strategy for argument arrays.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, the ","type":"text"},{"type":"codeVoice","code":"Example"},{"text":" command defined below has a ","type":"text"},{"type":"codeVoice","code":"words"},{"type":"text","text":" array that"},{"text":" ","type":"text"},{"type":"text","text":"uses the "},{"code":"remaining","type":"codeVoice"},{"type":"text","text":" parsing strategy:"}]},{"syntax":null,"type":"codeListing","code":["@main","struct Example: ParsableCommand {","    @Flag var verbose = false","","    @Argument(parsing: .remaining)","    var words: [String]","","    func run() {","        print(words.joined(separator: \"\\n\"))","    }","}"]},{"inlineContent":[{"text":"Any non-dash-prefixed inputs will be captured in the ","type":"text"},{"type":"codeVoice","code":"words"},{"type":"text","text":" array."}],"type":"paragraph"},{"syntax":null,"code":["$ example --verbose one two","one","two","$ example one two --verbose","one","two","$ example one two --other","Error: Unknown option '--other'"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a user uses the "},{"type":"codeVoice","code":"--"},{"text":" terminator in their input, all following inputs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will be captured in "},{"code":"words","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["$ example one two -- --verbose --other","one","two","--verbose","--other"]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"role":"symbol","roleHeading":"Type Property","symbolKind":"property","modules":[{"name":"ArgumentParser"}],"title":"remaining","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV9remainingACvpZ"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","kind":"symbol","role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"text":" ","type":"text"},{"type":"text","text":"into an array."}],"title":"ArgumentArrayParsingStrategy","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/postTerminator":{"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/postterminator","title":"postTerminator","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"postTerminator"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"kind":"symbol","abstract":[{"text":"Before parsing, capture all inputs that follow the ","type":"text"},{"type":"codeVoice","code":"--"},{"text":" terminator in this","type":"text"},{"type":"text","text":" "},{"text":"argument array.","type":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/Argument":{"title":"Argument","url":"\/documentation\/argumentparser\/argument","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper that represents a positional command-line argument."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Argument"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument","navigatorTitle":[{"text":"Argument","kind":"identifier"}]},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","title":"captureForPassthrough","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"captureForPassthrough"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"kind":"symbol","abstract":[{"text":"Parse all remaining inputs after parsing any known options or flags,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including dash-prefixed inputs and the "},{"code":"--","type":"codeVoice"},{"text":" terminator.","type":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","title":"allUnrecognized","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allUnrecognized","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"}],"kind":"symbol","abstract":[{"text":"After parsing, capture all unrecognized inputs in this argument array.","type":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining","title":"remaining","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"kind":"symbol","abstract":[{"type":"text","text":"Parse only unprefixed values from the command-line input, ignoring"},{"text":" ","type":"text"},{"text":"any inputs that have a dash prefix. This is the default strategy.","type":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","type":"topic"}}}