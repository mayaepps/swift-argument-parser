{"metadata":{"externalID":"s:14ArgumentParser20ArrayParsingStrategyV14upToNextOptionACvpZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"upToNextOption"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy","kind":"typeIdentifier"}],"modules":[{"name":"ArgumentParser"}],"roleHeading":"Type Property","title":"upToNextOption","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/uptonextoption"]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/upToNextOption","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"upToNextOption"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, for a parsable type with a property defined as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Option(parsing: .upToNextOption) var files: [String]"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"the input "},{"type":"codeVoice","code":"--files foo bar"},{"text":" would result in the array","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"[\"foo\", \"bar\"]"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"Parsing stops as soon as thereâ€™s another option in the input such that"},{"type":"text","text":" "},{"type":"codeVoice","code":"--files foo bar --verbose"},{"text":" would also set ","type":"text"},{"type":"codeVoice","code":"files"},{"text":" to the array","type":"text"},{"text":" ","type":"text"},{"code":"[\"foo\", \"bar\"]","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"text":"Parse all values up to the next option.","type":"text"}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy/upToNextOption":{"role":"symbol","url":"\/documentation\/argumentparser\/arrayparsingstrategy\/uptonextoption","abstract":[{"text":"Parse all values up to the next option.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"upToNextOption","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/upToNextOption","title":"upToNextOption","type":"topic","kind":"symbol"},"doc://ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy":{"type":"topic","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"role":"symbol","abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"title":"ArrayParsingStrategy"},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/Option":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"url":"\/documentation\/argumentparser\/option","kind":"symbol","role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","navigatorTitle":[{"text":"Option","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"title":"Option","type":"topic"}}}