{"metadata":{"roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unconditionalSingleValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy"}],"modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser20ArrayParsingStrategyV24unconditionalSingleValueACvpZ","role":"symbol","symbolKind":"property","title":"unconditionalSingleValue"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unconditionalSingleValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is identical to "},{"code":".singleValue","type":"codeVoice"},{"type":"text","text":" except that the value will be read"},{"type":"text","text":" "},{"text":"from the input immediately after the option, even if it could be interpreted as an option.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, for a parsable type with a property defined as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Option(parsing: .unconditionalSingleValue) var read: [String]"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"the input "},{"type":"codeVoice","code":"--read foo --read bar"},{"text":" would result in the array","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"[\"foo\", \"bar\"]"},{"type":"text","text":" â€“ just as it would have been the case for "},{"code":".singleValue","type":"codeVoice"},{"type":"text","text":"."}]},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"However, the input "},{"code":"--read --name Foo Bar --read baz","type":"codeVoice"},{"type":"text","text":" would result in"},{"text":" ","type":"text"},{"code":"read","type":"codeVoice"},{"type":"text","text":" being set to the array "},{"code":"[\"--name\", \"baz\"]","type":"codeVoice"},{"type":"text","text":". This is usually "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" what users","type":"text"},{"type":"text","text":" "},{"type":"text","text":"would expect. Use with caution."}]}],"type":"aside"}],"kind":"content"}],"abstract":[{"text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue"},"references":{"doc://ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy/unconditionalSingleValue":{"type":"topic","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/unconditionalSingleValue","url":"\/documentation\/argumentparser\/arrayparsingstrategy\/unconditionalsinglevalue","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unconditionalSingleValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","text":"ArrayParsingStrategy","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Parse the value immediately after the option while allowing repeating options, joining multiple into an array."}],"title":"unconditionalSingleValue"},"doc://ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy":{"type":"topic","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayParsingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"role":"symbol","abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"title":"ArrayParsingStrategy"},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/Option":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"url":"\/documentation\/argumentparser\/option","kind":"symbol","role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","navigatorTitle":[{"text":"Option","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"title":"Option","type":"topic"}}}