{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NameSpecification","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default implementation for this method always returns "},{"code":".long","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Implement this method for your custom ","type":"text"},{"code":"EnumerableFlag","type":"codeVoice"},{"text":" type to provide","type":"text"},{"type":"text","text":" "},{"text":"different name specifications for different cases.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag"]]},"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)-2rrp0","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","roleHeading":"Type Method","required":true,"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"}],"title":"name(for:)","role":"symbol","modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser14EnumerableFlagP4name3forAA17NameSpecificationVx_tFZ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"defaultImplementationsSections":[{"title":"EnumerableFlag Implementations","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)-4ofoj"]}],"abstract":[{"type":"text","text":"Returns the name specification to use for the given flag."}],"variants":[{"paths":["\/documentation\/argumentparser\/enumerableflag\/name(for:)-2rrp0"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","references":{"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/EnumerableFlag/name(for:)-4ofoj":{"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"}],"title":"name(for:)","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)-4ofoj","role":"symbol","kind":"symbol","url":"\/documentation\/argumentparser\/enumerableflag\/name(for:)-4ofoj"},"doc://ArgumentParser/documentation/ArgumentParser/EnumerableFlag/name(for:)-2rrp0":{"url":"\/documentation\/argumentparser\/enumerableflag\/name(for:)-2rrp0","title":"name(for:)","type":"topic","abstract":[{"text":"Returns the name specification to use for the given flag.","type":"text"}],"required":true,"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag\/name(for:)-2rrp0","defaultImplementations":1,"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"}],"role":"symbol"},"doc://ArgumentParser/documentation/ArgumentParser/EnumerableFlag":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumerableFlag"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag","role":"symbol","title":"EnumerableFlag","abstract":[{"text":"A type that represents the different possible flags to be used by a","type":"text"},{"type":"text","text":" "},{"code":"@Flag","type":"codeVoice"},{"text":" property.","type":"text"}],"url":"\/documentation\/argumentparser\/enumerableflag","navigatorTitle":[{"kind":"identifier","text":"EnumerableFlag"}]},"doc://ArgumentParser/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NameSpecification"}],"role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","url":"\/documentation\/argumentparser\/namespecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"type":"text","text":"label."}]}}}