{"metadata":{"externalID":"s:14ArgumentParser26SingleValueParsingStrategyV011scanningForD0ACvpZ","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scanningForValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"}],"roleHeading":"Type Property","title":"scanningForValue","symbolKind":"property","role":"symbol","modules":[{"name":"ArgumentParser"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"scanningForValue","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","kind":"typeIdentifier","text":"SingleValueParsingStrategy"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This will skip other options and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"read ahead"}]},{"text":" in the input","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to find the next available value. This may be "},{"inlineContent":[{"type":"text","text":"unexpected"}],"type":"emphasis"},{"type":"text","text":" for users."},{"type":"text","text":" "},{"type":"text","text":"Use with caution."}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"text":"For example, if ","type":"text"},{"type":"codeVoice","code":"--foo"},{"type":"text","text":" takes a value, then the input "},{"code":"--foo --bar bar","type":"codeVoice"},{"type":"text","text":" "},{"text":"would be parsed such that the value ","type":"text"},{"code":"bar","type":"codeVoice"},{"text":" is used for ","type":"text"},{"code":"--foo","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy"]]},"abstract":[{"type":"text","text":"Parse the next input, as long as that input can’t be interpreted as"},{"type":"text","text":" "},{"text":"an option or flag.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue"]}],"references":{"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/Option":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"url":"\/documentation\/argumentparser\/option","kind":"symbol","role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","navigatorTitle":[{"text":"Option","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"title":"Option","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy/scanningForValue":{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"scanningForValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Parse the next input, as long as that input can’t be interpreted as"},{"type":"text","text":" "},{"text":"an option or flag.","type":"text"}],"title":"scanningForValue"},"doc://ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy":{"kind":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"title":"SingleValueParsingStrategy","abstract":[{"text":"The strategy to use when parsing a single value from ","type":"text"},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments."}]}}}