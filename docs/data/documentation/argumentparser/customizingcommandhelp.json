{"abstract":[{"type":"text","text":"Define your command’s abstract, extended discussion, or usage string, and set the flags used to invoke the help display."}],"metadata":{"modules":[{"name":"ArgumentParser"}],"title":"Customizing Help for Commands","roleHeading":"Article","role":"article"},"seeAlsoSections":[{"identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands"],"generated":true,"title":"Essentials"}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"In addition to configuring the command name and subcommands, as described in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands"},{"text":", you can also configure a command’s help text by providing an abstract, discussion, or custom usage string.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Repeat: ParsableCommand {","    static var configuration = CommandConfiguration(","        abstract: \"Repeats your input phrase.\",","        usage: \"\"\"","            repeat <phrase>","            repeat --count <count> <phrase>","            \"\"\",","        discussion: \"\"\"","            Prints to stdout forever, or until you halt the program.","            \"\"\")","","    @Argument(help: \"The phrase to repeat.\")","    var phrase: String","","    @Option(help: \"How many times to repeat.\")","    var count: Int? = nil","","    mutating func run() throws {","        for _ in 0..<(count ?? 2) {","            print(phrase) ","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The customized components now appear in the generated help screen:"}]},{"code":["% repeat --help","OVERVIEW: Repeats your input phrase.","","Prints to stdout forever, or until you halt the program.","","USAGE: repeat <phrase>","       repeat --count <count> <phrase>","","ARGUMENTS:","  <phrase>                The phrase to repeat.","","OPTIONS:","  -h, --help              Show help information.","","% repeat hello!","hello!","hello!","hello!","hello!","hello!","hello!","..."],"type":"codeListing","syntax":null},{"level":2,"type":"heading","text":"Modifying the Help Flag Names","anchor":"Modifying-the-Help-Flag-Names"},{"type":"paragraph","inlineContent":[{"text":"Users can see the help screen for a command by passing either the ","type":"text"},{"code":"-h","type":"codeVoice"},{"text":" or the ","type":"text"},{"type":"codeVoice","code":"--help"},{"text":" flag, by default. If you need to use one of those flags for another purpose, you can provide alternative names when configuring a root command.","type":"text"}]},{"code":["struct Example: ParsableCommand {","    static let configuration = CommandConfiguration(","        helpNames: [.long, .customShort(\"?\")])","","    @Option(name: .shortAndLong, help: \"The number of history entries to show.\")","    var historyDepth: Int","","    mutating func run() throws {","        printHistory(depth: historyDepth)","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When running the command, "},{"type":"codeVoice","code":"-h"},{"type":"text","text":" matches the short name of the "},{"code":"historyDepth","type":"codeVoice"},{"text":" property, and ","type":"text"},{"code":"-?","type":"codeVoice"},{"type":"text","text":" displays the help screen."}]},{"syntax":null,"code":["% example -h 3","nmap -v -sS -O 10.2.2.2","sshnuke 10.2.2.2 -rootpw=\"Z1ON0101\"","ssh 10.2.2.2 -l root","% example -?","USAGE: example --history-depth <history-depth>","","ARGUMENTS:","  <phrase>                The phrase to repeat.","","OPTIONS:","  -h, --history-depth     The number of history entries to show.","  -?, --help              Show help information."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When not overridden, custom help names are inherited by subcommands. In this example, the parent command defines "},{"type":"codeVoice","code":"--help"},{"type":"text","text":" and "},{"code":"-?","type":"codeVoice"},{"text":" as its help names:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct Parent: ParsableCommand {","    static let configuration = CommandConfiguration(","        subcommands: [Child.self],","        helpNames: [.long, .customShort(\"?\")])","","    struct Child: ParsableCommand {","        @Option(name: .shortAndLong, help: \"The host the server will run on.\")","        var host: String","    }","}"]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"child"},{"type":"text","text":" subcommand inherits the parent’s help names, allowing the user to distinguish between the host argument ("},{"code":"-h","type":"codeVoice"},{"type":"text","text":") and help ("},{"type":"codeVoice","code":"-?"},{"type":"text","text":")."}],"type":"paragraph"},{"code":["% parent child -h 192.0.0.0","...","% parent child -?","USAGE: parent child --host <host>","","OPTIONS:","  -h, --host <host>       The host the server will run on.","  -?, --help              Show help information."],"type":"codeListing","syntax":null},{"level":2,"type":"heading","text":"Hiding Commands","anchor":"Hiding-Commands"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may not want to show every one of your command as part of your command-line interface. To render a command invisible (but still usable), pass "},{"type":"codeVoice","code":"shouldDisplay: false"},{"type":"text","text":" to the "},{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandConfiguration","isActive":true,"type":"reference"},{"text":" initializer.","type":"text"}]},{"type":"heading","anchor":"Generating-Help-Text-Programmatically","text":"Generating Help Text Programmatically","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The help screen is automatically shown to users when they call your command with the help flag. You can generate the same text from within your program by calling the "},{"code":"helpMessage()","type":"codeVoice"},{"text":" method.","type":"text"}]},{"code":["let help = Repeat.helpMessage()","\/\/ `help` matches the output above","","let fortyColumnHelp = Repeat.helpMessage(columns: 40)","\/\/ `fortyColumnHelp` is the same help screen, but wrapped to 40 columns"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"When generating help text for a subcommand, call ","type":"text"},{"code":"helpMessage(for:)","type":"codeVoice"},{"text":" on the ","type":"text"},{"type":"codeVoice","code":"ParsableCommand"},{"type":"text","text":" type that represents the root of the command tree and pass the subcommand type as a parameter to ensure the correct display."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser"],["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/argumentparser\/customizingcommandhelp"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand":{"title":"ParsableCommand","type":"topic","abstract":[{"text":"A type that can be executed as part of a nested tree of commands.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ParsableCommand","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","kind":"symbol","url":"\/documentation\/argumentparser\/parsablecommand"},"doc://ArgumentParser/documentation/ArgumentParser/CommandsAndSubcommands":{"role":"article","abstract":[{"text":"Break complex command-line tools into a tree of subcommands.","type":"text"}],"title":"Defining Commands and Subcommands","type":"topic","url":"\/documentation\/argumentparser\/commandsandsubcommands","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","kind":"article"},"doc://ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"title":"AsyncParsableCommand","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"type":"text","text":" "},{"text":"commands.","type":"text"}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncParsableCommand","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}]},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/CommandConfiguration":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandConfiguration","kind":"identifier"}],"url":"\/documentation\/argumentparser\/commandconfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandConfiguration"}],"abstract":[{"type":"text","text":"The configuration for a command."}],"title":"CommandConfiguration","kind":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandConfiguration"},"doc://ArgumentParser/documentation/ArgumentParser/GettingStarted":{"role":"article","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","title":"Getting Started with ArgumentParser","abstract":[{"type":"text","text":"Learn to set up and customize a simple command-line tool."}],"type":"topic","url":"\/documentation\/argumentparser\/gettingstarted","kind":"article"}}}