{"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag"]]},"metadata":{"role":"symbol","modules":[{"name":"ArgumentParser"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"symbolKind":"init","externalID":"s:14ArgumentParser4FlagVAASbRszlE4name9inversion11exclusivity4helpACySbGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","extendedModule":"ArgumentParser","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Initializer","title":"init(name:inversion:exclusivity:help:)"},"abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":" = .long, "},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity"},{"kind":"text","text":" = .chooseLast, "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}],"type":"paragraph"}],"name":"name"},{"name":"wrappedValue","content":[{"type":"paragraph","inlineContent":[{"text":"A default value to use for this property, provided implicitly by the compiler during property wrapper initialization.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for converting this flagâ€™s name into an on\/off pair."}]}],"name":"inversion"},{"name":"exclusivity","content":[{"inlineContent":[{"text":"The behavior to use when an on\/off pair of flags is specified.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Information about how to use this flag.","type":"text"}]}],"name":"help"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this initializer to create a Boolean flag with an on\/off pair."},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"type":"codeVoice","code":"--use-https"},{"text":" or ","type":"text"},{"code":"--no-use-https","type":"codeVoice"},{"type":"text","text":" to set the "},{"type":"codeVoice","code":"useHTTPS"},{"type":"text","text":" flag to "},{"code":"true","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"false"},{"text":", respectively.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool"]}],"kind":"content"}],"seeAlsoSections":[{"title":"Boolean Flags with Inversions","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"],"generated":true}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/FlagInversion":{"title":"FlagInversion","role":"symbol","abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"text":" pair.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagInversion","kind":"identifier"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"kind":"symbol","url":"\/documentation\/argumentparser\/flaginversion","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/NameSpecification":{"title":"NameSpecification","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NameSpecification"}],"role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","url":"\/documentation\/argumentparser\/namespecification","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"type":"text","text":"label."}]},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"title":"init(name:inversion:exclusivity:help:)","role":"symbol","abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"text":" ","type":"text"},{"text":"one or more inverted flags.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier","text":"ArgumentHelp"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool?"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"title":"init(name:inversion:exclusivity:help:)","role":"symbol","abstract":[{"type":"text","text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/Flag":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Flag","kind":"identifier"}],"url":"\/documentation\/argumentparser\/flag","kind":"symbol","role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"title":"Flag","type":"topic"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentHelp":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ArgumentHelp","kind":"identifier"}],"abstract":[{"text":"Help information for a command-line argument.","type":"text"}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentHelp"}],"title":"ArgumentHelp"},"doc://ArgumentParser/documentation/ArgumentParser/FlagExclusivity":{"navigatorTitle":[{"kind":"identifier","text":"FlagExclusivity"}],"type":"topic","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity","kind":"symbol","title":"FlagExclusivity","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"url":"\/documentation\/argumentparser\/flagexclusivity","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}]},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"title":"init(wrappedValue:name:inversion:exclusivity:help:)","role":"symbol","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"NameSpecification","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier","text":"ArgumentHelp"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","type":"topic"}}}