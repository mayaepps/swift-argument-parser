{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol\/Command","interfaceLanguage":"swift"},"metadata":{"externalID":"s:14ArgumentParser17AsyncMainProtocolP7CommandQa","symbolKind":"associatedtype","platforms":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Command"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser15ParsableCommandP","kind":"typeIdentifier","text":"ParsableCommand"}],"title":"Command","roleHeading":"Associated Type","role":"symbol","required":true,"modules":[{"name":"ArgumentParser"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Command","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","preciseIdentifier":"s:14ArgumentParser15ParsableCommandP","text":"ParsableCommand"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use @main directly on your root `AsyncParsableCommand` type."}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/asyncmainprotocol\/command"]}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"title":"AsyncParsableCommand","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"type":"text","text":" "},{"text":"commands.","type":"text"}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncParsableCommand","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}]},"doc://ArgumentParser/documentation/ArgumentParser/AsyncMainProtocol/Command":{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol\/Command","title":"Command","abstract":[],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncmainprotocol\/command","role":"symbol","required":true,"type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Command"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15ParsableCommandP","text":"ParsableCommand"}],"deprecated":true},"doc://ArgumentParser/documentation/ArgumentParser/AsyncMainProtocol":{"deprecated":true,"title":"AsyncMainProtocol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol","abstract":[{"text":"A type that can designate an ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" as the programâ€™s"},{"text":" ","type":"text"},{"type":"text","text":"entry point."}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncmainprotocol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncMainProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncMainProtocol"}]},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand":{"title":"ParsableCommand","type":"topic","abstract":[{"text":"A type that can be executed as part of a nested tree of commands.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ParsableCommand","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","kind":"symbol","url":"\/documentation\/argumentparser\/parsablecommand"}}}