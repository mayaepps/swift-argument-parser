{"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand"},"variants":[{"paths":["\/documentation\/argumentparser\/asyncparsablecommand"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp"],"generated":true,"title":"Essentials"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncParsableCommand"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","preciseIdentifier":"s:14ArgumentParser15ParsableCommandP","kind":"typeIdentifier","text":"ParsableCommand"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"To use ","type":"text"},{"type":"codeVoice","code":"async"},{"text":"\/","type":"text"},{"code":"await","type":"codeVoice"},{"text":" code in your commands’ ","type":"text"},{"code":"run()","type":"codeVoice"},{"type":"text","text":" method implementations, follow these steps:"}]},{"items":[{"content":[{"inlineContent":[{"text":"For the root command in your command-line tool, declare conformance to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"text":", whether or not that command uses asynchronous code.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Apply the ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":" attribute to the root command. (Note: If your root command is in a ","type":"text"},{"type":"codeVoice","code":"main.swift"},{"text":" file, rename the file to the name of the command.)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"For any command that needs to use asynchronous code, declare conformance to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" and mark the "},{"code":"run()","type":"codeVoice"},{"type":"text","text":" method as "},{"type":"codeVoice","code":"async"},{"text":". No changes are needed for subcommands that don’t use asynchronous code.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"The following example declares a "},{"type":"codeVoice","code":"CountLines"},{"type":"text","text":" command that uses Foundation’s asynchronous "},{"code":"FileHandle.AsyncBytes","type":"codeVoice"},{"type":"text","text":" to read the lines from a file:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import Foundation","","@main","struct CountLines: AsyncParsableCommand {","    @Argument(transform: URL.init(fileURLWithPath:))","    var inputFile: URL","","    mutating func run() async throws {","        let fileHandle = try FileHandle(forReadingFrom: inputFile)","        let lineCount = try await fileHandle.bytes.lines.reduce(into: 0) ","            { count, _ in count += 1 }","        print(lineCount)","    }","}"]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"The Swift compiler uses either the type marked with "},{"code":"@main","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"main.swift","type":"codeVoice"},{"text":" file as the entry point for an executable program. You can use either one, but not both — rename your ","type":"text"},{"type":"codeVoice","code":"main.swift"},{"text":" file to the name of the command when you add ","type":"text"},{"type":"codeVoice","code":"@main"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Note"},{"level":3,"text":"Usage in Swift 5.5","anchor":"Usage-in-Swift-55","type":"heading"},{"inlineContent":[{"text":"In Swift 5.5, you need to declare a separate, standalone type as your asynchronous ","type":"text"},{"code":"@main","type":"codeVoice"},{"text":" entry point. Instead of designating your root command as ","type":"text"},{"code":"@main","type":"codeVoice"},{"text":", as described above, use the code snippet below, replacing the placeholder with the name of your own root command. Otherwise, follow the steps above to use ","type":"text"},{"type":"codeVoice","code":"async"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"await"},{"type":"text","text":" code within your commands’ "},{"type":"codeVoice","code":"run()"},{"type":"text","text":" methods."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@main struct AsyncMain: AsyncMainProtocol {","    typealias Command = <#RootCommand#>","}"]}]}],"metadata":{"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncParsableCommand","kind":"identifier"}],"modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser20AsyncParsableCommandP","role":"symbol","roleHeading":"Protocol","title":"AsyncParsableCommand","symbolKind":"protocol","platforms":[{"introducedAt":"13.0","unavailable":false,"name":"iOS","beta":false,"deprecated":false},{"introducedAt":"10.15","name":"macOS","unavailable":false,"deprecated":false,"beta":false},{"name":"Mac Catalyst","deprecated":false,"introducedAt":"13.0","beta":false,"unavailable":false},{"beta":false,"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"introducedAt":"6.0","beta":false,"unavailable":false,"name":"watchOS","deprecated":false}]},"kind":"symbol","topicSections":[{"title":"Implementing a Command’s Behavior","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/run()"]},{"title":"Starting the Program","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main()","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol"]}],"sections":[],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/ArgumentParser\/Se"],"title":"Inherits From"}],"abstract":[{"text":"A type that can be executed asynchronously, as part of a nested tree of","type":"text"},{"type":"text","text":" "},{"text":"commands.","type":"text"}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/GettingStarted":{"role":"article","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","title":"Getting Started with ArgumentParser","abstract":[{"type":"text","text":"Learn to set up and customize a simple command-line tool."}],"type":"topic","url":"\/documentation\/argumentparser\/gettingstarted","kind":"article"},"doc://ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/main()":{"title":"main()","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main()","abstract":[{"type":"text","text":"Executes this command, or one of its subcommands, with the program’s"},{"text":" ","type":"text"},{"type":"text","text":"command-line arguments."}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand\/main()","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"}]},"doc://ArgumentParser/documentation/ArgumentParser/ParsableArguments":{"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments","title":"ParsableArguments","abstract":[{"type":"text","text":"A type that can be parsed from a program’s command-line arguments."}],"kind":"symbol","url":"\/documentation\/argumentparser\/parsablearguments","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParsableArguments"}],"navigatorTitle":[{"kind":"identifier","text":"ParsableArguments"}]},"doc://ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/run()":{"role":"symbol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/run()","title":"run()","abstract":[{"type":"text","text":"The behavior or functionality of this command."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"required":true,"kind":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand\/run()"},"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand":{"title":"ParsableCommand","type":"topic","abstract":[{"text":"A type that can be executed as part of a nested tree of commands.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ParsableCommand","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","kind":"symbol","url":"\/documentation\/argumentparser\/parsablecommand"},"doc://ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"title":"AsyncParsableCommand","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"type":"text","text":" "},{"text":"commands.","type":"text"}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncParsableCommand","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}]},"doc://ArgumentParser/documentation/ArgumentParser/CommandsAndSubcommands":{"role":"article","abstract":[{"text":"Break complex command-line tools into a tree of subcommands.","type":"text"}],"title":"Defining Commands and Subcommands","type":"topic","url":"\/documentation\/argumentparser\/commandsandsubcommands","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","kind":"article"},"doc://ArgumentParser/documentation/ArgumentParser/AsyncMainProtocol":{"deprecated":true,"title":"AsyncMainProtocol","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol","abstract":[{"text":"A type that can designate an ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" as the program’s"},{"text":" ","type":"text"},{"type":"text","text":"entry point."}],"kind":"symbol","url":"\/documentation\/argumentparser\/asyncmainprotocol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncMainProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncMainProtocol"}]},"doc://ArgumentParser/documentation/ArgumentParser/CustomizingCommandHelp":{"role":"article","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp","title":"Customizing Help for Commands","abstract":[{"type":"text","text":"Define your command’s abstract, extended discussion, or usage string, and set the flags used to invoke the help display."}],"type":"topic","url":"\/documentation\/argumentparser\/customizingcommandhelp","kind":"article"},"doc://ArgumentParser/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ArgumentParser\/Se"},"doc://ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","role":"collection","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"}}}